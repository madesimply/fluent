{"version":3,"sources":["../src/index.ts","../src/fluent.ts"],"sourcesContent":["export * from \"./fluent\";","// fluent.ts\nimport {\n  Chain,\n  Fluent,\n  FluentConfig,\n  FluentStructure,\n  ApiContext,\n  HasRequiredProperties,\n  FluentOptions,\n} from './types';\n\n// Utility functions\nfunction isObject(value: unknown): value is Record<string, unknown> {\n  return typeof value === 'object' && value !== null;\n}\n\nfunction isChainItem(item: unknown): item is Chain[number] {\n  return (\n    typeof item === 'object' &&\n    item !== null &&\n    'method' in item &&\n    typeof (item as any).method === 'string' &&\n    'args' in item &&\n    Array.isArray((item as any).args)\n  );\n}\n\nfunction isFluent(value: unknown): value is FluentStructure {\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    'chain' in value &&\n    Array.isArray((value as any).chain)\n  );\n}\n\nfunction processArgument(arg: unknown, api: any, ctx: any): any {\n  if (isFluent(arg)) {\n    return fluent({ api, chain: arg.chain, ctx });\n  }\n  if (Array.isArray(arg)) {\n    return arg.map((item) => processArgument(item, api, ctx));\n  }\n  if (isChainItem(arg)) {\n    return {\n      ...arg,\n      args: arg.args.map(a => processArgument(a, api, ctx))\n    };\n  }\n  if (typeof arg === 'object' && arg !== null) {\n    const processedArg: Record<string, any> = {};\n    for (const key in arg) {\n      processedArg[key] = processArgument((arg as any)[key], api, ctx);\n    }\n    return processedArg;\n  }\n  return arg;\n}\n\nfunction chainItemToString(item: Chain[number]): string {\n  const args = item.args.map(arg => JSON.stringify(arg)).join(', ');\n  return `${item.method}(${args})`;\n}\n\nfunction createProxy<TRootApi, TCurrentApi, TCurrentChain extends Chain, TPath extends string>(\n  rootApi: TRootApi,\n  currentApi: TCurrentApi,\n  currentChain: TCurrentChain,\n  path: TPath,\n  options: FluentOptions\n): Fluent<TRootApi, TCurrentApi, TCurrentChain, TPath> {\n  const target: Fluent<TRootApi, TCurrentApi, TCurrentChain, TPath> = {\n    chain: currentChain,\n    run: (data: any) => runChain(rootApi, data, currentChain, options),\n    goto: (fluentProxy: FluentStructure) => {\n      if (!isFluent(fluentProxy) || fluentProxy.chain.length === 0) {\n        throw new Error(\"Goto must receive a non-empty Fluent\");\n      }\n      return createProxy(rootApi, currentApi, [...currentChain, ...fluentProxy.chain] as any, path, options);\n    },\n    toString: () => currentChain.map(chainItemToString).join('.').replace(/\\.$/, '')\n  } as Fluent<TRootApi, TCurrentApi, TCurrentChain, TPath>;\n\n  return new Proxy(target, {\n    get(target, prop: string | symbol) {\n      if (prop in target) {\n        return (target as any)[prop];\n      }\n\n      let nextApi: unknown;\n      let nextPath: string;\n\n      if (isObject(currentApi) && prop in currentApi) {\n        nextApi = (currentApi as any)[prop];\n        nextPath = `${path}${path ? '.' : ''}${prop as string}`;\n      } else if (isObject(rootApi) && prop in rootApi) {\n        nextApi = (rootApi as any)[prop];\n        nextPath = prop as string;\n      } else {\n        return undefined;\n      }\n\n      if (typeof nextApi === 'function') {\n        return (...args: any[]) => {\n          const method = nextPath;\n          const constArgs = { args } as const;\n          const newChain = [\n            ...currentChain,\n            { \n              method, \n              args: constArgs.args,\n              data: {} as any, // Placeholder for data type\n              return: {} as any, // Placeholder for return type\n            }\n          ];\n          return createProxy(rootApi, currentApi, newChain, path, options);\n        };\n      }\n\n      if (isObject(nextApi)) {\n        return createProxy(rootApi, nextApi as any, currentChain, nextPath, options);\n      }\n\n      return undefined;\n    }\n  });\n}\nfunction bindApiToContext<TApi, TCtx>(api: TApi, ctx: TCtx = {} as TCtx): TApi {\n  const boundApi: any = {};\n  for (const key in api) {\n    if (typeof api[key] === 'function') {\n      boundApi[key] = (api[key] as Function).bind(ctx);\n    } else if (typeof api[key] === 'object' && api[key] !== null) {\n      boundApi[key] = bindApiToContext(api[key], ctx);\n    } else {\n      boundApi[key] = api[key];\n    }\n  }\n  return boundApi as TApi;\n}\n\nfunction parseInitialChain<TApi, TCtx, T extends Chain | string | undefined>(\n  api: TApi,\n  ctx: TCtx,\n  chain: T\n): T extends string ? Chain : T extends Chain ? T : [] {\n  if (!chain) return [] as any;\n\n  let jsonChain: Chain;\n  if (typeof chain === 'string') {\n    const getChain = new Function(\"api\", \"fluent\", `\n      const root = fluent({ api });\n      const { ${Object.keys(api as object).join(\",\")} } = root;\n      const chain = ${chain};\n      return chain.chain;\n    `);\n    jsonChain = getChain(api, fluent);\n  } else {\n    jsonChain = chain as Chain;\n  }\n\n  return jsonChain.map((item) => {\n    if (isChainItem(item)) {\n      return {\n        ...item,\n        args: item.args.map((arg) => processArgument(arg, api, ctx))\n      };\n    }\n    return item;\n  }) as any;\n}\n\n// Utility function to get a cross-environment compatible setImmediate\nconst getSetImmediate = () => {\n  if (typeof setImmediate === 'function') {\n    return setImmediate;\n  }\n  if (typeof globalThis !== 'undefined' && typeof globalThis.setImmediate === 'function') {\n    return globalThis.setImmediate;\n  }\n  return (fn: Function, ...args: any[]) => setTimeout(fn, 0, ...args);\n};\n\n// Use the utility function to create our setImmediate\nconst setImmediate = getSetImmediate();\n\nfunction runChain<TApi>(api: TApi, initialData: any, chain: Chain, options: FluentOptions): any {\n  let data = initialData;\n  let index = 0;\n  let isAsync = false;\n\n  function processNextItem(): any {\n    if (index >= chain.length) {\n      return data;\n    }\n\n    const item = chain[index];\n\n    if (isChainItem(item)) {\n      const method = item.method.split('.').reduce((obj: any, key) => obj[key], api);\n      if (typeof method !== 'function') {\n        throw new Error(`Method ${item.method} not found in API`);\n      }\n\n      const result = method(data, ...item.args);\n\n      if (result instanceof Promise) {\n        return result.then(resolvedData => \n          runAsyncChain(api, resolvedData, chain.slice(index + 1), options)\n        );\n      }\n\n      data = result === undefined ? data : result;\n    }\n\n    index++;\n    return processNextItem();\n  }\n\n  const result = processNextItem();\n  return isAsync ? new Promise(resolve => setImmediate(() => resolve(result))) : result;\n}\n\nasync function runAsyncChain<TApi>(api: TApi, initialData: any, chain: Chain, options: FluentOptions): Promise<any> {\n  let data = initialData;\n  let index = 0;\n\n  while (index < chain.length) {\n    const item = chain[index];\n\n    if (isChainItem(item)) {\n      const method = item.method.split('.').reduce((obj: any, key) => obj[key], api);\n      if (typeof method !== 'function') {\n        throw new Error(`Method ${item.method} not found in API`);\n      }\n\n      const result = await method(data, ...item.args);\n      data = result === undefined ? data : result;\n    }\n\n    index++;\n  }\n\n  return data;\n}\n\nexport function fluent<TApi, TCtx extends ApiContext<TApi>, TInitialChain extends Chain = []>(\n  config: HasRequiredProperties<ApiContext<TApi>> extends true\n    ? FluentConfig<TApi, ApiContext<TApi>, TInitialChain> & { ctx: ApiContext<TApi> }\n    : FluentConfig<TApi, ApiContext<TApi>, TInitialChain>\n): Fluent<TApi, TApi, TInitialChain, \"\"> {\n  const { api, ctx, chain: initialChain } = config;\n\n  const boundApi = bindApiToContext(api, ctx);\n  const parsedChain = parseInitialChain(boundApi, ctx || {}, initialChain) as TInitialChain;\n\n  const options = ctx?.fluent || { blocking: false };\n\n  return createProxy(boundApi, boundApi, parsedChain, \"\", options);\n}\n\n// export types\n\nexport {\n  Fluent,\n  FluentConfig,\n  ApiContext,\n  FluentOptions,\n};\n"],"mappings":"4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,YAAAE,IAAA,eAAAC,EAAAH,GCYA,SAASI,EAASC,EAAkD,CAClE,OAAO,OAAOA,GAAU,UAAYA,IAAU,IAChD,CAEA,SAASC,EAAYC,EAAsC,CACzD,OACE,OAAOA,GAAS,UAChBA,IAAS,MACT,WAAYA,GACZ,OAAQA,EAAa,QAAW,UAChC,SAAUA,GACV,MAAM,QAASA,EAAa,IAAI,CAEpC,CAEA,SAASC,EAASH,EAA0C,CAC1D,OACE,OAAOA,GAAU,UACjBA,IAAU,MACV,UAAWA,GACX,MAAM,QAASA,EAAc,KAAK,CAEtC,CAEA,SAASI,EAAgBC,EAAcC,EAAUC,EAAe,CAC9D,GAAIJ,EAASE,CAAG,EACd,OAAOG,EAAO,CAAE,IAAAF,EAAK,MAAOD,EAAI,MAAO,IAAAE,CAAI,CAAC,EAE9C,GAAI,MAAM,QAAQF,CAAG,EACnB,OAAOA,EAAI,IAAKH,GAASE,EAAgBF,EAAMI,EAAKC,CAAG,CAAC,EAE1D,GAAIN,EAAYI,CAAG,EACjB,MAAO,CACL,GAAGA,EACH,KAAMA,EAAI,KAAK,IAAII,GAAKL,EAAgBK,EAAGH,EAAKC,CAAG,CAAC,CACtD,EAEF,GAAI,OAAOF,GAAQ,UAAYA,IAAQ,KAAM,CAC3C,IAAMK,EAAoC,CAAC,EAC3C,QAAWC,KAAON,EAChBK,EAAaC,CAAG,EAAIP,EAAiBC,EAAYM,CAAG,EAAGL,EAAKC,CAAG,EAEjE,OAAOG,CACT,CACA,OAAOL,CACT,CAEA,SAASO,EAAkBV,EAA6B,CACtD,IAAMW,EAAOX,EAAK,KAAK,IAAIG,GAAO,KAAK,UAAUA,CAAG,CAAC,EAAE,KAAK,IAAI,EAChE,MAAO,GAAGH,EAAK,MAAM,IAAIW,CAAI,GAC/B,CAEA,SAASC,EACPC,EACAC,EACAC,EACAC,EACAC,EACqD,CACrD,IAAMC,EAA8D,CAClE,MAAOH,EACP,IAAMI,GAAcC,EAASP,EAASM,EAAMJ,EAAcE,CAAO,EACjE,KAAOI,GAAiC,CACtC,GAAI,CAACpB,EAASoB,CAAW,GAAKA,EAAY,MAAM,SAAW,EACzD,MAAM,IAAI,MAAM,sCAAsC,EAExD,OAAOT,EAAYC,EAASC,EAAY,CAAC,GAAGC,EAAc,GAAGM,EAAY,KAAK,EAAUL,EAAMC,CAAO,CACvG,EACA,SAAU,IAAMF,EAAa,IAAIL,CAAiB,EAAE,KAAK,GAAG,EAAE,QAAQ,MAAO,EAAE,CACjF,EAEA,OAAO,IAAI,MAAMQ,EAAQ,CACvB,IAAIA,EAAQI,EAAuB,CACjC,GAAIA,KAAQJ,EACV,OAAQA,EAAeI,CAAI,EAG7B,IAAIC,EACAC,EAEJ,GAAI3B,EAASiB,CAAU,GAAKQ,KAAQR,EAClCS,EAAWT,EAAmBQ,CAAI,EAClCE,EAAW,GAAGR,CAAI,GAAGA,EAAO,IAAM,EAAE,GAAGM,CAAc,WAC5CzB,EAASgB,CAAO,GAAKS,KAAQT,EACtCU,EAAWV,EAAgBS,CAAI,EAC/BE,EAAWF,MAEX,QAGF,GAAI,OAAOC,GAAY,WACrB,MAAO,IAAIZ,IAAgB,CACzB,IAAMc,EAASD,EACTE,EAAY,CAAE,KAAAf,CAAK,EACnBgB,EAAW,CACf,GAAGZ,EACH,CACE,OAAAU,EACA,KAAMC,EAAU,KAChB,KAAM,CAAC,EACP,OAAQ,CAAC,CACX,CACF,EACA,OAAOd,EAAYC,EAASC,EAAYa,EAAUX,EAAMC,CAAO,CACjE,EAGF,GAAIpB,EAAS0B,CAAO,EAClB,OAAOX,EAAYC,EAASU,EAAgBR,EAAcS,EAAUP,CAAO,CAI/E,CACF,CAAC,CACH,CACA,SAASW,EAA6BxB,EAAWC,EAAY,CAAC,EAAiB,CAC7E,IAAMwB,EAAgB,CAAC,EACvB,QAAWpB,KAAOL,EACZ,OAAOA,EAAIK,CAAG,GAAM,WACtBoB,EAASpB,CAAG,EAAKL,EAAIK,CAAG,EAAe,KAAKJ,CAAG,EACtC,OAAOD,EAAIK,CAAG,GAAM,UAAYL,EAAIK,CAAG,IAAM,KACtDoB,EAASpB,CAAG,EAAImB,EAAiBxB,EAAIK,CAAG,EAAGJ,CAAG,EAE9CwB,EAASpB,CAAG,EAAIL,EAAIK,CAAG,EAG3B,OAAOoB,CACT,CAEA,SAASC,EACP1B,EACAC,EACA0B,EACqD,CACrD,GAAI,CAACA,EAAO,MAAO,CAAC,EAEpB,IAAIC,EACJ,OAAI,OAAOD,GAAU,SAOnBC,EANiB,IAAI,SAAS,MAAO,SAAU;AAAA;AAAA,gBAEnC,OAAO,KAAK5B,CAAa,EAAE,KAAK,GAAG,CAAC;AAAA,sBAC9B2B,CAAK;AAAA;AAAA,KAEtB,EACoB3B,EAAKE,CAAM,EAEhC0B,EAAYD,EAGPC,EAAU,IAAKhC,GAChBD,EAAYC,CAAI,EACX,CACL,GAAGA,EACH,KAAMA,EAAK,KAAK,IAAKG,GAAQD,EAAgBC,EAAKC,EAAKC,CAAG,CAAC,CAC7D,EAEKL,CACR,CACH,CAGA,IAAMiC,EAAkB,IAClB,OAAOC,GAAiB,WACnBA,EAEL,OAAO,WAAe,KAAe,OAAO,WAAW,cAAiB,WACnE,WAAW,aAEb,CAACC,KAAiBxB,IAAgB,WAAWwB,EAAI,EAAG,GAAGxB,CAAI,EAI9DuB,EAAeD,EAAgB,EAErC,SAASb,EAAehB,EAAWgC,EAAkBL,EAAcd,EAA6B,CAC9F,IAAIE,EAAOiB,EACPC,EAAQ,EACRC,EAAU,GAEd,SAASC,GAAuB,CAC9B,GAAIF,GAASN,EAAM,OACjB,OAAOZ,EAGT,IAAMnB,EAAO+B,EAAMM,CAAK,EAExB,GAAItC,EAAYC,CAAI,EAAG,CACrB,IAAMyB,EAASzB,EAAK,OAAO,MAAM,GAAG,EAAE,OAAO,CAACwC,EAAU/B,IAAQ+B,EAAI/B,CAAG,EAAGL,CAAG,EAC7E,GAAI,OAAOqB,GAAW,WACpB,MAAM,IAAI,MAAM,UAAUzB,EAAK,MAAM,mBAAmB,EAG1D,IAAMyC,EAAShB,EAAON,EAAM,GAAGnB,EAAK,IAAI,EAExC,GAAIyC,aAAkB,QACpB,OAAOA,EAAO,KAAKC,GACjBC,EAAcvC,EAAKsC,EAAcX,EAAM,MAAMM,EAAQ,CAAC,EAAGpB,CAAO,CAClE,EAGFE,EAAOsB,IAAW,OAAYtB,EAAOsB,CACvC,CAEA,OAAAJ,IACOE,EAAgB,CACzB,CAEA,IAAME,EAASF,EAAgB,EAC/B,OAAOD,EAAU,IAAI,QAAQM,GAAWV,EAAa,IAAMU,EAAQH,CAAM,CAAC,CAAC,EAAIA,CACjF,CAEA,eAAeE,EAAoBvC,EAAWgC,EAAkBL,EAAcd,EAAsC,CAClH,IAAIE,EAAOiB,EACPC,EAAQ,EAEZ,KAAOA,EAAQN,EAAM,QAAQ,CAC3B,IAAM/B,EAAO+B,EAAMM,CAAK,EAExB,GAAItC,EAAYC,CAAI,EAAG,CACrB,IAAMyB,EAASzB,EAAK,OAAO,MAAM,GAAG,EAAE,OAAO,CAACwC,EAAU/B,IAAQ+B,EAAI/B,CAAG,EAAGL,CAAG,EAC7E,GAAI,OAAOqB,GAAW,WACpB,MAAM,IAAI,MAAM,UAAUzB,EAAK,MAAM,mBAAmB,EAG1D,IAAMyC,EAAS,MAAMhB,EAAON,EAAM,GAAGnB,EAAK,IAAI,EAC9CmB,EAAOsB,IAAW,OAAYtB,EAAOsB,CACvC,CAEAJ,GACF,CAEA,OAAOlB,CACT,CAEO,SAASb,EACduC,EAGuC,CACvC,GAAM,CAAE,IAAAzC,EAAK,IAAAC,EAAK,MAAOyC,CAAa,EAAID,EAEpChB,EAAWD,EAAiBxB,EAAKC,CAAG,EACpC0C,EAAcjB,EAAkBD,EAAUxB,GAAO,CAAC,EAAGyC,CAAY,EAEjE7B,GAAUZ,GAAA,YAAAA,EAAK,SAAU,CAAE,SAAU,EAAM,EAEjD,OAAOO,EAAYiB,EAAUA,EAAUkB,EAAa,GAAI9B,CAAO,CACjE","names":["src_exports","__export","fluent","__toCommonJS","isObject","value","isChainItem","item","isFluent","processArgument","arg","api","ctx","fluent","a","processedArg","key","chainItemToString","args","createProxy","rootApi","currentApi","currentChain","path","options","target","data","runChain","fluentProxy","prop","nextApi","nextPath","method","constArgs","newChain","bindApiToContext","boundApi","parseInitialChain","chain","jsonChain","getSetImmediate","setImmediate","fn","initialData","index","isAsync","processNextItem","obj","result","resolvedData","runAsyncChain","resolve","config","initialChain","parsedChain"]}